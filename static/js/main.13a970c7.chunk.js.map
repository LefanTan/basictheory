{"version":3,"sources":["Components/Chords/ChordGenerator.module.css","Components/Header.module.css","Components/Chords/Sidebar.module.css","Components/Home.module.css","Components/Chords/NoteSelector.module.css","App.module.css","Components/NotFoundPage.module.css","Components/Helpers/CustomHooks.js","Components/Header.js","Components/Home.js","Services/Firebase.js","Components/Chords/imgs/chordFret.png","Components/Chords/imgs/noteButton.png","Components/Helpers/HelperFunction.js","Components/Chords/ChordGenerator.js","Components/Chords/ChordInfo.js","Components/Chords/StandardButton.js","Components/Chords/NoteSelector.js","Components/Chords/Sidebar.js","Components/Chords/ChordsPage.js","Components/NotFoundPage.js","App.js","index.js","Components/Chords/ChordInfo.module.css","Components/Chords/ChordsPage.module.css"],"names":["module","exports","useViewport","React","useState","window","innerWidth","width","setWidth","innerHeight","height","setHeight","isDevice","setIsDevice","useEffect","handleWindowResize","addEventListener","removeEventListener","Header","className","styles","header","to","title_button","button_row","process","header_button","Component","Home","props","state","searchName","handleChange","bind","Container","mainPageButton","firebase","initializeApp","apiKey","authDomain","databaseURL","db","database","notes","getNoteBasedOnInterval","rootNote","interval","rootIndex","findIndex","n","ChordGenerator","StandardNoteButton","topPos","Math","pow","noteInfo","fret","leftPos","string","standardButtonContainer","position","top","left","display","justifyContent","alignItems","textAlign","style","onClick","onNoteClick","noteNumber","noteButton","src","noteButtonImg","noteText","OpenStringButton","openStringButtonContainer","h3","stringNote","fretNote","noteButtonPositions","find","x","undefined","fretNumContainer","fretNumber","targetNote","startIndex","targetIndex","getFretNumber","note","mainContainer","chordFret","mainImg","map","ChordInfo","moreShape","selectedNote","openChordData","shapeList","updateOpenChordData","handleClick","chordGeneratorNoteClick","buttonClassName","this","setState","prevState","arrowDownButton","noteNum","chord","info","console","log","chordName","ref","child","orderByKey","equalTo","on","snap","exists","val","Shapes","slice","prevProps","h1","FullName","rowChordImgContainer","columnContainer","Notes","noteDegreeRow","num","p","name","h2","textContainer","Description","Sound","arrowDownImg","moreChordContainerActive","moreChordContainer","moreChordRow","shape","StandardButton","value","NoteSelector","noteMainContainer","noteButtonContainer","noteButtonSelected","noteButtonSharpSelected","noteButtonSharp","Sidebar","sidebar","setSidebar","document","querySelector","setProperty","toggle","sidebarButton","sidebarIcon","SidebarActive","children","ChordsPage","selectedChord","selectedChordInfo","sidebarToggle","handleNoteButtonClick","handleChordButtonClick","updateChordInfo","checkForMajorSharp","substring","length","chordStyles","noteSelector","rowContainer","innerChordRow","buttonStyles","chordButtonSelected","chordButton","NotFoundPage","App","basename","path","exact","component","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.13a970c7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainContainer\":\"ChordGenerator_mainContainer__19rtf\",\"h3\":\"ChordGenerator_h3__1DyjE\",\"stringNote\":\"ChordGenerator_stringNote__3QiS9\",\"fretNumber\":\"ChordGenerator_fretNumber__1j98V\",\"noteText\":\"ChordGenerator_noteText__3ueta\",\"mainImg\":\"ChordGenerator_mainImg__3wR3t\",\"noteButtonContainer\":\"ChordGenerator_noteButtonContainer__3Q2Qg\",\"noteButton\":\"ChordGenerator_noteButton__6PDAh\",\"noteButtonImg\":\"ChordGenerator_noteButtonImg__2rdeF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__20eyr\",\"button_row\":\"Header_button_row__3Bk9e\",\"title_button\":\"Header_title_button__1tKvG\",\"header_button\":\"Header_header_button__2CJ53\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"Sidebar_Container__2d5BQ\",\"Sidebar\":\"Sidebar_Sidebar__3_rLm\",\"SidebarActive\":\"Sidebar_SidebarActive__qbNTi Sidebar_Sidebar__3_rLm\",\"sidebarButton\":\"Sidebar_sidebarButton__1yFQ7\",\"sidebarIcon\":\"Sidebar_sidebarIcon__3U8On\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"Home_Container__1fcrI\",\"mainPageButton\":\"Home_mainPageButton__2suUW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"noteMainContainer\":\"NoteSelector_noteMainContainer__2suQz\",\"noteButtonContainer\":\"NoteSelector_noteButtonContainer__2yb0v\",\"genericButton\":\"NoteSelector_genericButton__RcwX5\",\"noteButton\":\"NoteSelector_noteButton__Ux5fk NoteSelector_genericButton__RcwX5\",\"chordButton\":\"NoteSelector_chordButton__1NIxN NoteSelector_genericButton__RcwX5\",\"noteButtonSelected\":\"NoteSelector_noteButtonSelected__1wpBM NoteSelector_noteButton__Ux5fk NoteSelector_genericButton__RcwX5\",\"chordButtonSelected\":\"NoteSelector_chordButtonSelected__d1MhL NoteSelector_chordButton__1NIxN NoteSelector_genericButton__RcwX5\",\"noteButtonSharp\":\"NoteSelector_noteButtonSharp__1w9L4 NoteSelector_genericButton__RcwX5\",\"noteButtonSharpSelected\":\"NoteSelector_noteButtonSharpSelected__3o0d0 NoteSelector_noteButtonSharp__1w9L4 NoteSelector_genericButton__RcwX5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"App_Container__UEwRT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"NotFoundPage_Container__2NCpT\"};","import React, {useState, useEffect} from 'react'\r\n\r\n// This hook returns an updated width and height of the device\r\nfunction useViewport(){\r\n    const [width, setWidth] = React.useState(window.innerWidth)\r\n    const [height, setHeight] = React.useState(window.innerHeight)\r\n    const [isDevice, setIsDevice] = React.useState(false);\r\n\r\n    React.useEffect(() =>{\r\n        const handleWindowResize = () => {\r\n            setWidth(window.innerWidth)\r\n            setHeight(window.innerHeight)\r\n        }   \r\n        window.addEventListener(\"resize\", handleWindowResize)\r\n\r\n        // when component unmount, unsubscribe from event\r\n        return () => window.removeEventListener(\"resize\", handleWindowResize)\r\n    }, [])\r\n\r\n    React.useEffect(() => {\r\n        setIsDevice(height > width)\r\n    })\r\n\r\n\r\n    return {width, height, isDevice}\r\n}\r\n\r\nexport default useViewport;","import React, {Component} from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport styles from './Header.module.css'\r\n\r\n// Header component\r\nclass Header extends Component {\r\n    render(){\r\n        return(\r\n            <header className={styles.header}>\r\n                <Link to=\"/\"><button className={styles.title_button}>Basictheory.io</button> </Link>\r\n                <div className={styles.button_row}>\r\n                    <Link to={process.env.REACT_APP_CHORDS_PAGE_URL}>\r\n                        <button className={styles.header_button}>Chords</button>\r\n                    </Link>\r\n                    <Link to={process.env.REACT_APP_SCALES_PAGE_URL}>\r\n                        <button className={styles.header_button}>Scales</button>\r\n                    </Link>\r\n                </div>\r\n            </header>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Header;","import {React, Component} from \"react\"\r\nimport {Link} from \"react-router-dom\"\r\nimport styles from \"./Home.module.css\"\r\n\r\n// Home page component\r\nclass Home extends Component{\r\n    constructor(props){\r\n        super(props)\r\n\r\n        this.state = {\r\n            searchName: \"\"\r\n        }\r\n        \r\n        this.handleChange = this.handleChange.bind(this);\r\n    }\r\n\r\n    handleChange(){\r\n\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className={styles.Container}>\r\n                <Link to={process.env.REACT_APP_CHORDS_PAGE_URL}> <button className={styles.mainPageButton}>Chord</button> </Link>\r\n                <Link to={process.env.REACT_APP_SCALES_PAGE_URL}> <button className={styles.mainPageButton}>Scales</button> </Link>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Home;\r\n","import firebase from 'firebase/app'\r\nimport 'firebase/database'\r\n\r\nconst config={\r\n    apiKey: \"AIzaSyADAWhnUsK6O8h_QkXOZq2BJAQyMIGyNBo\",\r\n    authDomain: \"basictheory-9d452.firebaseapp.com\",\r\n    databaseURL: \"https://basictheory-9d452.firebaseio.com\"\r\n}\r\nfirebase.initializeApp(config)\r\n\r\nexport const db = firebase.database();\r\n","export default __webpack_public_path__ + \"static/media/chordFret.0ce51486.png\";","export default __webpack_public_path__ + \"static/media/noteButton.82f32475.png\";","\r\nvar notes = ['C', 'C#/Db', 'D', 'D#/Eb', 'E', 'F', 'F#/Gb', 'G', 'G#/Ab', 'A', 'A#/Bb', 'B']\r\n\r\nexport function getNoteBasedOnInterval(rootNote, interval){\r\n    const rootIndex = notes.findIndex(n => n == rootNote)\r\n\r\n    switch(interval){\r\n        case '1': // root note\r\n        case '8':\r\n            return rootNote\r\n        case 'b2': // minor second\r\n            return notes[(rootIndex + 1) % 12]\r\n        case '2': // major second\r\n        case '9':\r\n            return notes[(rootIndex + 2) % 12]\r\n        case 'b3': // minor third\r\n            return notes[(rootIndex + 3) % 12]\r\n        case '3': // major third\r\n            return notes[(rootIndex + 4) % 12]\r\n        case '4': // perfect forth\r\n        case '11':\r\n            return notes[(rootIndex + 5) % 12]\r\n        case 'b5': // diminished fifth or augmented forth\r\n        case '#11':\r\n            return notes[(rootIndex + 6) % 12]\r\n        case '5': // perfect fifth\r\n            return notes[(rootIndex + 7) % 12]\r\n        case 'b6': // minor sixth\r\n            return notes[(rootIndex + 8) % 12]\r\n        case '6': // major sixth or major 13th or diminished 7th\r\n        case 'bb7':\r\n        case '13': \r\n            return notes[(rootIndex + 9) % 12]\r\n        case 'b7': // minor seventh\r\n            return notes[(rootIndex + 10) % 12]\r\n        case '7': // major seventh\r\n            return notes[(rootIndex + 11) % 12]\r\n    }\r\n}\r\n\r\n// in standard tuning ofc lol\r\nexport function getFretNumber(string, targetNote){\r\n    var startIndex = 0;\r\n    switch(string){\r\n        case 6: // Starts from E\r\n            startIndex = notes.findIndex(x => x == 'E')\r\n            break;\r\n        case 5:\r\n            startIndex = notes.findIndex(x => x == 'A')\r\n            break;\r\n        case 4:\r\n            startIndex = notes.findIndex(x => x == 'D')\r\n            break;\r\n        case 3:\r\n            startIndex = notes.findIndex(x => x == 'G')\r\n            break;\r\n        case 2:\r\n            startIndex = notes.findIndex(x => x == 'B')\r\n            break;\r\n        case 1:\r\n            startIndex = notes.findIndex(x => x == 'E')\r\n            break;\r\n    }\r\n    var targetIndex = notes.findIndex(x => x == targetNote)\r\n\r\n    if(targetIndex < startIndex)\r\n        return 12 - startIndex + targetIndex // 12 because thats the number of item in the notes array\r\n    else\r\n        return targetIndex - startIndex\r\n}","/* eslint-disable react/jsx-key */\r\n/* eslint-disable react/prop-types */\r\nimport React from 'react'\r\nimport styles from './ChordGenerator.module.css'\r\nimport chordFret from './imgs/chordFret.png'\r\nimport noteButton from './imgs/noteButton.png'\r\nimport {getFretNumber, getNoteBasedOnInterval} from '../Helpers/HelperFunction'\r\n\r\nfunction ChordGenerator(props){\r\n\r\n    // Buttons for numbered note buttons\r\n    function StandardNoteButton(props){\r\n        var topPos = -0.25 * Math.pow(props.noteInfo.fret, 2) + 19.25 * props.noteInfo.fret - 8.5; \r\n        var leftPos = 19 * (7 - props.noteInfo.string) - 22.5\r\n        \r\n        var standardButtonContainer = {\r\n            position: 'absolute',       \r\n            top: `${topPos}%`,\r\n            left: `${leftPos}%`,\r\n    \r\n            display: 'flex',\r\n            justifyContent: 'center',\r\n            alignItems: 'center',\r\n            textAlign: 'center',\r\n            width: '15%',\r\n            height: '15%'\r\n        }\r\n\r\n        return(    \r\n            <div style={standardButtonContainer}>\r\n                <button onClick={() => props.onNoteClick(props.noteInfo.noteNumber)} className={styles.noteButton}>\r\n                    <img src={noteButton} className={styles.noteButtonImg}/>\r\n                </button>\r\n                <p className={styles.noteText}>{props.noteInfo.noteNumber}</p>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    // For open string buttons such as X and O\r\n    function OpenStringButton(props){\r\n        var leftPos = 19 * (7 - props.noteInfo.string) - 23.5\r\n\r\n        var openStringButtonContainer = {\r\n            position: 'absolute',       \r\n            top: '-30px',\r\n            left: `${leftPos}%`,\r\n    \r\n            display: 'flex',\r\n            justifyContent: 'center',\r\n            alignItems: 'center',\r\n            textAlign: 'center',\r\n            width: '15%',\r\n            height: '15%'\r\n        }\r\n\r\n        return(    \r\n            <div style={openStringButtonContainer}>\r\n                <button onClick={() => props.noteInfo.noteNumber != 'X' && props.onNoteClick(props.noteInfo.noteNumber)} className={styles.noteButton}>\r\n                    <h3 className={props.noteInfo.noteNumber == 'X' ? styles.h3 : styles.stringNote}>\r\n                        {props.noteInfo.fret == 0 && props.noteInfo.noteNumber != 'X' ? 'O' : props.noteInfo.noteNumber}\r\n                    </h3>\r\n                </button>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    var fretNote = props.noteButtonPositions && props.noteButtonPositions.find(x => x.fret != 0 && x.noteNumber == '1');\r\n    if(fretNote == undefined && props.noteButtonPositions)\r\n        fretNote = props.noteButtonPositions.find(x => x.fret != 0 && x.noteNumber != 'X')\r\n\r\n    var topPos = -0.75 * Math.pow(fretNote.fret, 2) + 22.5 * fretNote.fret - 12.5; \r\n    var fretNumContainer = {\r\n        position: \"absolute\",\r\n        top: `${topPos}%`,\r\n        left: \"-25%\",\r\n\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        textAlign: 'center',\r\n        width: '15%',\r\n        height: '15%',\r\n    }\r\n    const fretNumber = getFretNumber(fretNote.string, getNoteBasedOnInterval(props.note, fretNote.noteNumber))\r\n    return(\r\n        <div className={styles.mainContainer}>\r\n            <img src={chordFret} className={styles.mainImg} />\r\n            {props.noteButtonPositions && props.noteButtonPositions.map(noteInfo =>{\r\n                if(noteInfo.fret == 0){ \r\n                    return(<OpenStringButton key={props.noteButtonPositions.findIndex(x => x == noteInfo)} onNoteClick={props.onNoteClick} noteInfo={noteInfo}/>)\r\n                }else{\r\n                    return(<StandardNoteButton key={props.noteButtonPositions.findIndex(x => x == noteInfo)} onNoteClick={props.onNoteClick} noteInfo={noteInfo}/>)\r\n                }\r\n            })}\r\n            <div style={fretNumContainer}>\r\n                <h3 className={styles.fretNumber}>{fretNumber === 0 ? 12 : fretNumber}</h3>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ChordGenerator;","/* eslint-disable react/prop-types */\r\nimport React, {Component} from 'react'\r\nimport {db} from '../../Services/Firebase'\r\nimport styles from './ChordInfo.module.css'\r\nimport ChordGenerator from './ChordGenerator'\r\nimport {getNoteBasedOnInterval} from '../Helpers/HelperFunction'\r\nimport {HiArrowDown} from 'react-icons/hi'\r\n\r\nclass ChordInfo extends Component{\r\n\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            moreShape: false,\r\n            selectedNote: \"None\",\r\n            openChordData: undefined,\r\n            shapeList: undefined\r\n        }\r\n        this.updateOpenChordData = this.updateOpenChordData.bind(this)\r\n        this.handleClick = this.handleClick.bind(this)\r\n        this.chordGeneratorNoteClick = this.chordGeneratorNoteClick.bind(this)\r\n    }\r\n\r\n    // Handle general button click\r\n    handleClick(buttonClassName){\r\n        this.setState(prevState => {\r\n            return{\r\n                moreShape: (buttonClassName == styles.arrowDownButton) ? !prevState.moreShape : prevState.moreShape\r\n            }\r\n        })\r\n    }\r\n\r\n    // Invoked when a note button from a generated chord is clicked\r\n    chordGeneratorNoteClick(noteNum){\r\n        this.setState({\r\n            selectedNote: getNoteBasedOnInterval(this.props.note, noteNum)\r\n        })\r\n    }\r\n\r\n    // Query for openchord data based on the current note and chord\r\n    updateOpenChordData(){\r\n        if(!(this.props.chord && this.props.info && this.props.info))\r\n            return\r\n        else{\r\n            console.log(this.props.chord)\r\n            const chordName = `${this.props.note}${this.props.chord}`\r\n            const openChordRef = db.ref().child('OpenChords')\r\n            const query = openChordRef.\r\n                                orderByKey().\r\n                                equalTo(chordName)\r\n    \r\n            query.on('value', snap =>{\r\n                this.setState({\r\n                    openChordData: snap.exists() ? snap.val()[chordName] : \"\",\r\n                    shapeList: snap.exists() ? this.props.info.Shapes : this.props.info.Shapes.slice(1)\r\n                })\r\n            })\r\n        }\r\n       \r\n    }\r\n\r\n    // Query data for the first default chord\r\n    componentDidMount(){\r\n        this.updateOpenChordData();\r\n    }\r\n\r\n    componentDidUpdate(prevProps){\r\n        if(prevProps != this.props){\r\n            // Reset if selectedNote or selectedChord changed\r\n            this.setState({selectedNote : \"None\"})\r\n\r\n            // If theres note/chord change, check if the openchord data exist\r\n            this.updateOpenChordData();\r\n        }\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            this.props.info ?\r\n\r\n            <div className={styles.Container}>\r\n                <h1 className={styles.h1}>{this.props.info.FullName} Chord</h1>    \r\n                <div className={styles.rowChordImgContainer}>\r\n                    <ChordGenerator note={this.props.note} onNoteClick={this.chordGeneratorNoteClick} noteButtonPositions={this.state.openChordData ? this.state.openChordData['Notes'] : this.props.info.Shapes[0]['Notes']}/>\r\n                    <div className={styles.columnContainer}>\r\n                        {this.props.info.Notes.map(note => \r\n                            <div key={note.name} className={styles.noteDegreeRow}>\r\n                                <h1 className={styles.noteText}>{getNoteBasedOnInterval(this.props.note, note.num)}</h1> \r\n                                <p className={styles.p}>{note.name}</p>\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n                </div>\r\n                <div className={styles.noteDegreeRow}>\r\n                        <h2 className={styles.h2}>Selected Note:</h2>\r\n                        <h2>{this.state.selectedNote}</h2>\r\n                    </div>\r\n                <div className={styles.textContainer}>\r\n                    <h2 className={styles.h2}>Description</h2>\r\n                    <p className={styles.p}>\r\n                        {this.props.info.Description}\r\n                    </p>\r\n                    <br/>\r\n                    <h2 className={styles.h2}>Sound</h2>\r\n                    <p className={styles.p}>\r\n                        {this.props.info.Sound}\r\n                    </p>\r\n                </div>\r\n                <br/>\r\n                <div className={styles.rowChordImgContainer}> \r\n                        <button className={styles.arrowDownButton} onClick={() => this.handleClick(styles.arrowDownButton)}>\r\n                        <h2 className={styles.h2}><strong>More Shapes</strong></h2>\r\n                            <HiArrowDown className={styles.arrowDownImg} />\r\n                            </button>\r\n                </div>\r\n                <div className={this.state.moreShape ? styles.moreChordContainerActive : styles.moreChordContainer}> \r\n                    <div className={styles.noteDegreeRow}>\r\n                        <h2 className={styles.h2}>Selected Note:</h2>\r\n                        <h2>{this.state.selectedNote}</h2>\r\n                    </div>\r\n\r\n                    <div className={styles.moreChordRow}>\r\n                    {this.state.shapeList && \r\n                        this.state.shapeList.map(shape => \r\n                            <ChordGenerator key={this.state.shapeList.findIndex(x => x == shape)} note={this.props.note} onNoteClick={this.chordGeneratorNoteClick} noteButtonPositions={shape['Notes']}/>\r\n                        )}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            :\r\n\r\n            // If the info doesn't exist, print N/A\r\n            <div>\r\n                <h1 className={styles.h1}>No chord selected!</h1>    \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ChordInfo;","/* eslint-disable react/prop-types */\r\nimport React from 'react'\r\n\r\n/*\r\nA standard button that allows different style to be used, and also an onClick handler with it's value as paramater\r\n*/\r\nfunction StandardButton(props){\r\n    return(\r\n        <button className={props.className} onClick={() => props.onClick(props.value)}>\r\n            {props.value}\r\n        </button>\r\n    )\r\n}\r\n\r\nexport default StandardButton;","/* eslint-disable react/prop-types */\r\nimport React from 'react'\r\nimport StandardButton from './StandardButton'\r\nimport styles from './NoteSelector.module.css'\r\n\r\n/*\r\nNote selector component\r\nprops expect onClick handler\r\n*/\r\nfunction NoteSelector(props){\r\n    return(\r\n        <div className={styles.noteMainContainer}>\r\n                <div className={styles.noteButtonContainer}>\r\n                    <StandardButton className={props.selectedNote == 'C' ? styles.noteButtonSelected : styles.noteButton} value='C' onClick={props.onClick}/>\r\n                    <div>\r\n                        <StandardButton className={props.selectedNote == 'C#' ? styles.noteButtonSharpSelected : styles.noteButtonSharp} value='C#' onClick={props.onClick}/>\r\n                        <StandardButton className={props.selectedNote == 'Db' ? styles.noteButtonSharpSelected : styles.noteButtonSharp} value='Db' onClick={props.onClick}/>\r\n                    </div>\r\n                    <StandardButton className={props.selectedNote == 'D' ? styles.noteButtonSelected : styles.noteButton} value='D' onClick={props.onClick}/>\r\n                    <div>\r\n                        <StandardButton className={props.selectedNote == 'D#' ? styles.noteButtonSharpSelected : styles.noteButtonSharp} value='D#' onClick={props.onClick}/>\r\n                        <StandardButton className={props.selectedNote == 'Eb' ? styles.noteButtonSharpSelected : styles.noteButtonSharp} value='Eb' onClick={props.onClick}/>\r\n                    </div>\r\n                    <StandardButton className={props.selectedNote == 'E' ? styles.noteButtonSelected : styles.noteButton} value='E' onClick={props.onClick}/>\r\n                    <StandardButton className={props.selectedNote == 'F' ? styles.noteButtonSelected : styles.noteButton} value='F' onClick={props.onClick}/>\r\n                    <div>\r\n                        <StandardButton className={props.selectedNote == 'F#' ? styles.noteButtonSharpSelected : styles.noteButtonSharp} value='F#' onClick={props.onClick}/>\r\n                        <StandardButton className={props.selectedNote == 'Gb' ? styles.noteButtonSharpSelected : styles.noteButtonSharp} value='Gb' onClick={props.onClick}/>\r\n                    </div>\r\n                    <StandardButton className={props.selectedNote == 'G' ? styles.noteButtonSelected : styles.noteButton} value='G' onClick={props.onClick}/>\r\n                    <div>\r\n                        <StandardButton className={props.selectedNote == 'G#' ? styles.noteButtonSharpSelected : styles.noteButtonSharp} value='G#' onClick={props.onClick}/>\r\n                        <StandardButton className={props.selectedNote == 'Ab' ? styles.noteButtonSharpSelected : styles.noteButtonSharp} value='Ab' onClick={props.onClick}/>\r\n                    </div>\r\n                    <StandardButton className={props.selectedNote == 'A' ? styles.noteButtonSelected : styles.noteButton} value='A' onClick={props.onClick}/>\r\n                    <div>\r\n                        <StandardButton className={props.selectedNote == 'A#' ? styles.noteButtonSharpSelected : styles.noteButtonSharp} value='A#' onClick={props.onClick}/>\r\n                        <StandardButton className={props.selectedNote == 'Bb' ? styles.noteButtonSharpSelected : styles.noteButtonSharp} value='Bb' onClick={props.onClick}/>\r\n                    </div>\r\n                    <StandardButton className={props.selectedNote == 'B' ? styles.noteButtonSelected : styles.noteButton} value='B' onClick={props.onClick}/>\r\n                </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NoteSelector;","/* eslint-disable react/prop-types */\r\nimport React, {useEffect, useState} from 'react'\r\nimport * as Fi from 'react-icons/fi'\r\nimport styles from './Sidebar.module.css'\r\nimport {Link} from 'react-router-dom';\r\n\r\nfunction Sidebar(props){\r\n    const [sidebar, setSidebar] = useState(false)\r\n    const toggleSidebar = () => setSidebar(!sidebar)\r\n    const useSidebar = (state) => setSidebar(state)\r\n\r\n    useEffect(() => {\r\n        // get the root element and update the overflow state\r\n        var root = document.querySelector(':root');\r\n\r\n        // if side bar is active, show y scrollbar\r\n        root.style.setProperty('--overflow-y', sidebar ? 'visible' : 'hidden');\r\n    }, [sidebar])\r\n\r\n    useEffect(() => {\r\n        useSidebar(props.toggle)\r\n    },[props.toggle])\r\n\r\n    return(\r\n        <div className={styles.Container}>\r\n            <Link to=\"#\">\r\n                <button className={styles.sidebarButton} onClick={toggleSidebar} ><Fi.FiMenu className={styles.sidebarIcon}/></button>\r\n            </Link>\r\n            <div className={sidebar ? styles.SidebarActive : styles.Sidebar}>\r\n                {props.children}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Sidebar;","import React, {Component} from 'react';\r\nimport ChordInfo from './ChordInfo'\r\nimport chordStyles from './ChordsPage.module.css'\r\nimport buttonStyles from './NoteSelector.module.css'\r\nimport StandardButton from './StandardButton';\r\nimport NoteSelector from './NoteSelector';\r\nimport Sidebar from './Sidebar';\r\nimport {db} from '../../Services/Firebase'\r\n\r\n// Chord page component\r\nclass ChordsPage extends Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state ={\r\n            selectedNote: 'C',\r\n            selectedChord: undefined,\r\n            selectedChordInfo: undefined,\r\n            sidebarToggle: false\r\n        }\r\n\r\n        this.handleNoteButtonClick = this.handleNoteButtonClick.bind(this)\r\n        this.handleChordButtonClick = this.handleChordButtonClick.bind(this)\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.updateChordInfo()\r\n    }\r\n\r\n    // Query chord info with the selected chord type and update the state\r\n    updateChordInfo(){\r\n        if(!this.state.selectedChord){\r\n            this.setState({selectedChordInfo: undefined})\r\n            return\r\n        }\r\n\r\n        var checkForMajorSharp = (this.state.selectedChord == \"maj7(#11)\") ? \"maj7sharp11\" : this.state.selectedChord\r\n\r\n        const chordTypesRef = db.ref().child('ChordTypes')\r\n        const query = chordTypesRef.\r\n                        orderByKey().\r\n                        equalTo(checkForMajorSharp)\r\n\r\n        query.on('value', snap =>\r\n            this.setState({selectedChordInfo: snap.val() && snap.val()[`${checkForMajorSharp}`]})\r\n        )\r\n    }\r\n\r\n    // invoked when note selector button is clicked\r\n    handleNoteButtonClick(value){\r\n        this.setState({\r\n            selectedNote: value\r\n        }) \r\n    }\r\n\r\n    // Invoked when a chord button is clicked\r\n    handleChordButtonClick(value){\r\n        this.setState(prevState => {\r\n            return{\r\n                selectedChord: `${value.substring(this.state.selectedNote.length)}` == prevState.selectedChord ? undefined : `${value.substring(this.state.selectedNote.length)}`,\r\n                sidebarToggle: `${value.substring(this.state.selectedNote.length)}` == this.state.selectedChord ? false : true\r\n            }\r\n        },() => this.updateChordInfo())\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className={chordStyles.mainContainer}>\r\n                <div className={chordStyles.header}>\r\n                    <NoteSelector className={chordStyles.noteSelector} styles={chordStyles} selectedNote={this.state.selectedNote} onClick={this.handleNoteButtonClick}/>\r\n                </div>\r\n\r\n                <div className={chordStyles.rowContainer}>\r\n                    <Sidebar toggle={this.state.sidebarToggle}><ChordInfo chord={this.state.selectedChord} note={this.state.selectedNote} info={this.state.selectedChordInfo} /></Sidebar>\r\n                    <div className={chordStyles.columnContainer}>\r\n                        <h1 className={chordStyles.h1}>Major</h1>\r\n                        <div className={chordStyles.innerChordRow}>\r\n                            <StandardButton className={\"maj\" == this.state.selectedChord ? buttonStyles.chordButtonSelected : buttonStyles.chordButton} value={`${this.state.selectedNote}maj`} onClick={this.handleChordButtonClick}/>\r\n                            <StandardButton className={\"maj7\" == this.state.selectedChord ? buttonStyles.chordButtonSelected : buttonStyles.chordButton} value={`${this.state.selectedNote}maj7`} onClick={this.handleChordButtonClick}/>\r\n                            <StandardButton className={\"maj9\" == this.state.selectedChord ? buttonStyles.chordButtonSelected : buttonStyles.chordButton} value={`${this.state.selectedNote}maj9`} onClick={this.handleChordButtonClick}/>\r\n                        </div>\r\n                        <div className={chordStyles.innerChordRow}>\r\n                            <StandardButton className={\"maj11\" == this.state.selectedChord ? buttonStyles.chordButtonSelected : buttonStyles.chordButton} value={`${this.state.selectedNote}maj11`} onClick={this.handleChordButtonClick}/>\r\n                            <StandardButton className={\"maj13\" == this.state.selectedChord ? buttonStyles.chordButtonSelected : buttonStyles.chordButton} value={`${this.state.selectedNote}maj13`} onClick={this.handleChordButtonClick}/>\r\n                            <StandardButton className={\"maj7(#11)\" == this.state.selectedChord ? buttonStyles.chordButtonSelected : buttonStyles.chordButton} value={`${this.state.selectedNote}maj7(#11)`} onClick={this.handleChordButtonClick}/>\r\n                        </div>\r\n                        <br/>\r\n                        <h1 className={chordStyles.h1}>Dominant</h1>\r\n                        <div className={chordStyles.innerChordRow}>\r\n                            <StandardButton className={\"7\" == this.state.selectedChord ? buttonStyles.chordButtonSelected : buttonStyles.chordButton} value={`${this.state.selectedNote}7`} onClick={this.handleChordButtonClick}/>\r\n                            <StandardButton className={\"9\" == this.state.selectedChord ? buttonStyles.chordButtonSelected : buttonStyles.chordButton} value={`${this.state.selectedNote}9`} onClick={this.handleChordButtonClick}/>\r\n                            <StandardButton className={\"11\" == this.state.selectedChord ? buttonStyles.chordButtonSelected : buttonStyles.chordButton} value={`${this.state.selectedNote}11`} onClick={this.handleChordButtonClick}/>\r\n                            <StandardButton className={\"13\" == this.state.selectedChord ? buttonStyles.chordButtonSelected : buttonStyles.chordButton} value={`${this.state.selectedNote}13`} onClick={this.handleChordButtonClick}/>\r\n                        </div>\r\n                        <br/>\r\n                        <h1 className={chordStyles.h1}>Diminished</h1>\r\n                        <div className={chordStyles.innerChordRow}>\r\n                            <StandardButton className={\"dim\" == this.state.selectedChord ? buttonStyles.chordButtonSelected : buttonStyles.chordButton} value={`${this.state.selectedNote}dim`} onClick={this.handleChordButtonClick}/>\r\n                            <StandardButton className={\"dim7\" == this.state.selectedChord ? buttonStyles.chordButtonSelected : buttonStyles.chordButton} value={`${this.state.selectedNote}dim7`} onClick={this.handleChordButtonClick}/>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className={chordStyles.columnContainer}>\r\n                        <h1 className={chordStyles.h1}>Minor</h1>\r\n                        <div className={chordStyles.innerChordRow}>\r\n                            <StandardButton className={\"min\" == this.state.selectedChord ? buttonStyles.chordButtonSelected : buttonStyles.chordButton} value={`${this.state.selectedNote}min`} onClick={this.handleChordButtonClick}/>\r\n                            <StandardButton className={\"min7\" == this.state.selectedChord ? buttonStyles.chordButtonSelected : buttonStyles.chordButton} value={`${this.state.selectedNote}min7`} onClick={this.handleChordButtonClick}/>\r\n                            <StandardButton className={\"min9\" == this.state.selectedChord ? buttonStyles.chordButtonSelected : buttonStyles.chordButton} value={`${this.state.selectedNote}min9`} onClick={this.handleChordButtonClick}/>\r\n                        </div>\r\n                        <div className={chordStyles.innerChordRow}>\r\n                            <StandardButton className={\"min11\" == this.state.selectedChord ? buttonStyles.chordButtonSelected : buttonStyles.chordButton} value={`${this.state.selectedNote}min11`} onClick={this.handleChordButtonClick}/>\r\n                            <StandardButton className={\"min13\" == this.state.selectedChord ? buttonStyles.chordButtonSelected : buttonStyles.chordButton} value={`${this.state.selectedNote}min13`} onClick={this.handleChordButtonClick}/>\r\n                        </div>\r\n                        <br/>\r\n                        <h1 className={chordStyles.h1}>Suspended</h1>\r\n                        <div className={chordStyles.innerChordRow}>\r\n                            <StandardButton className={\"sus2\" == this.state.selectedChord ? buttonStyles.chordButtonSelected : buttonStyles.chordButton} value={`${this.state.selectedNote}sus2`} onClick={this.handleChordButtonClick}/>\r\n                            <StandardButton className={\"sus4\" == this.state.selectedChord ? buttonStyles.chordButtonSelected : buttonStyles.chordButton} value={`${this.state.selectedNote}sus4`} onClick={this.handleChordButtonClick}/>\r\n                            <StandardButton className={\"7sus4\" == this.state.selectedChord ? buttonStyles.chordButtonSelected : buttonStyles.chordButton} value={`${this.state.selectedNote}7sus4`} onClick={this.handleChordButtonClick}/>\r\n                        </div>\r\n                        <br/>\r\n                        <h1 className={chordStyles.h1}>Augmented</h1>\r\n                        <div className={chordStyles.innerChordRow}>\r\n                            <StandardButton className={\"aug\" == this.state.selectedChord ? buttonStyles.chordButtonSelected : buttonStyles.chordButton} value={`${this.state.selectedNote}aug`} onClick={this.handleChordButtonClick}/>\r\n                            <StandardButton className={\"aug7\" == this.state.selectedChord ? buttonStyles.chordButtonSelected : buttonStyles.chordButton} value={`${this.state.selectedNote}aug7`} onClick={this.handleChordButtonClick}/>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ChordsPage;","import React from 'react'\r\nimport styles from './NotFoundPage.module.css'\r\n\r\n/*\r\nThis component is displayed when the page does not exist\r\n*/\r\nfunction NotFoundPage(){\r\n    return(\r\n        <div className={styles.Container}>\r\n            <h1>404 Page Does Not Exist</h1>\r\n            <h2>{\"Maybe I'm still working on this page, chill!\"}</h2>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default NotFoundPage;","import React, { useEffect } from \"react\"\r\nimport useViewport from './Components/Helpers/CustomHooks'\r\nimport Header from './Components/Header'\r\nimport Home from './Components/Home'\r\nimport ChordsPage from './Components/Chords/ChordsPage'\r\nimport {BrowserRouter as Router, Switch, Route, HashRouter} from 'react-router-dom'\r\nimport styles from './App.module.css'\r\nimport NotFoundPage from \"./Components/NotFoundPage\"\r\n\r\n/*\r\nMain component\r\n*/\r\nfunction App() {\r\n    const {width} = useViewport()\r\n\r\n    useEffect(() => {\r\n        // get the root element and update the overflow state\r\n        var root = document.querySelector(':root');\r\n\r\n        // If device width is less than 1280, it is a mobile device. Use max-content as width instead.\r\n        root.style.setProperty('--device-width', width > 1000 ? '100%' : 'max-content');\r\n    } ,[width])\r\n\r\n    return(\r\n        <div className={styles.Container}>\r\n            <HashRouter basename={process.env.REACT_APP_PUBLIC_URL}>\r\n                <Header />\r\n                <Switch>\r\n                    <Route path='/' exact component={Home}/>\r\n                    <Route path={process.env.REACT_APP_HOME_PAGE_URL} component={Home}/>\r\n                    <Route path={process.env.REACT_APP_CHORDS_PAGE_URL} component={ChordsPage}/>  \r\n                    <Route component={NotFoundPage}/>\r\n                </Switch>\r\n            </HashRouter>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App.js'\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"ChordInfo_Container__C3IG-\",\"generalText\":\"ChordInfo_generalText__2gOEg\",\"h1\":\"ChordInfo_h1__1ti7E ChordInfo_generalText__2gOEg\",\"noteText\":\"ChordInfo_noteText__2Isnj ChordInfo_generalText__2gOEg\",\"h2\":\"ChordInfo_h2__3JBhO ChordInfo_generalText__2gOEg\",\"p\":\"ChordInfo_p__1tyq5 ChordInfo_generalText__2gOEg\",\"arrowDownButton\":\"ChordInfo_arrowDownButton__2z7EF\",\"arrowDownImg\":\"ChordInfo_arrowDownImg__1ETa1\",\"rowChordImgContainer\":\"ChordInfo_rowChordImgContainer__PmIqV\",\"noteDegreeRow\":\"ChordInfo_noteDegreeRow__1j0ad\",\"noteDegreeRowIncrease\":\"ChordInfo_noteDegreeRowIncrease__3_UhM ChordInfo_noteDegreeRow__1j0ad\",\"columnContainer\":\"ChordInfo_columnContainer__P5mZL\",\"textContainer\":\"ChordInfo_textContainer__1QVS1\",\"moreChordContainer\":\"ChordInfo_moreChordContainer__1llu-\",\"moreChordContainerActive\":\"ChordInfo_moreChordContainerActive__xZn9t ChordInfo_moreChordContainer__1llu-\",\"moreChordRow\":\"ChordInfo_moreChordRow__2vq8m\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainContainer\":\"ChordsPage_mainContainer__1ZESD\",\"h1\":\"ChordsPage_h1__1o7vf\",\"header\":\"ChordsPage_header__vH971\",\"rowContainer\":\"ChordsPage_rowContainer__3AIgr\",\"columnContainer\":\"ChordsPage_columnContainer__2IvAP\",\"innerChordRow\":\"ChordsPage_innerChordRow__18tss\"};"],"sourceRoot":""}